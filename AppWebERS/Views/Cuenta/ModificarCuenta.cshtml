@using AppWebERS.Models
@model ModificarViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container pt-4 w-75">
    @using (Html.BeginForm("ModificarCuenta", "Cuenta", FormMethod.Post, new { id = "form" }))
    {
        @Html.ValidationSummary(true)
        <div class="card">
            <div class="card-header">
                Nombre de usuario
            </div>
            <div class="card-body">
                <div class="card-text">
                    @Html.DisplayFor(m => m.AntiguoNombre)
                    <button class="btn btn-primary float-right btn-secondary" type="button" data-toggle="collapse" data-target="#collapseExample"
                            aria-expanded="false" aria-controls="collapseExample">

                        Editar
                    </button>
                    <div class="collapse colapsable" id="collapseExample">
                        @Html.EditorFor(m => m.Nombre, new { htmlAttributes = new { @class = "form-control", placeholder = "Nuevo nombre de usuario" } })
                        @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="card mt-4">
            <div class="card-header">
                Correo electrónico
            </div>
            <div class="card-body">
                <div class="card-text">
                    @Html.DisplayFor(m => m.AntiguoEmail)
                    <button class="btn btn-primary float-right btn-secondary" type="button" data-toggle="collapse" data-target="#collapseExample2"
                            aria-expanded="false" aria-controls="collapseExample2">

                        Editar
                    </button>
                    <div class="collapse colapsable" id="collapseExample2">
                        @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Nuevo correo" } })
                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="card mt-4">
            <div class="card-header">
                Constraseña
            </div>
            <div class="card-body">
                <div class="card-text">
                    <span id="passModal">*********************</span>
                    <button class="btn btn-primary float-right btn-secondary" type="button" data-toggle="collapse" data-target="#collapseExample1"
                            aria-expanded="false" aria-controls="collapseExample1">

                        Editar
                    </button>
                    <div class="collapse colapsable" id="collapseExample1">
                        @Html.EditorFor(m => m.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Nueva contraseña" } })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })

                    </div>
                </div>
            </div>
        </div>
        <div class="btn-group btn-group-toggle w-100" data-toggle="buttons">
            <label class="btn btn-secondary mt-3 w-100">
                @if (Model.AntiguoEstado)
                {
                    @Html.Raw("Deshabilitar")
                }
                else
                {
                    @Html.Raw("Habilitar")
                }
                @Html.CheckBoxFor(m => m.Estado, new { @class = "form-control", @type = "checkbox", @autocomplete = "off" })
            </label>
        </div>

        @Html.HiddenFor(m => m.Rut);
        @Html.HiddenFor(m => m.AntiguoNombre);
        @Html.HiddenFor(m => m.AntiguoEmail);
        <div class="row justify-content-end mx-0 my-3">
            <button type="submit" class="btn btn-primary">Guardar cambios</button>
        </div>
    }
</div>


@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
}