@using AppWebERS.Models;
@model AppWebERS.Models.Requisito
@{
    /**/

    ViewBag.Title = "Editar Requisito";
}

@{ 
    var r = (Requisito)ViewData["requisito"];
    var tipo = (string)ViewData["tipo"];
    var lista = (List<Requisito.CheckBox>)ViewData["lista"];
}
<h2> Editar Requisito</h2>

@using (Html.BeginForm("EditarRequisito", "Proyecto", new
{


    idRequisito = Model.IdRequisito,
    nombre = Model.Nombre,
    descripcion = Model.Descripcion,
    prioridad = Model.Prioridad,
    fuente = Model.Fuente,
    estabilidad = Model.Estabilidad,
    estado = Model.Estado,
    tipoRequisito = Model.TipoRequisito,
    medida = Model.Medida,
    escala = Model.Escala,
    fecha = Model.Fecha,
    incremento = Model.Incremento,
    tipo = Model.Tipo,
    idProyecto = @ViewBag.IdProyecto,
    num_requisito = @ViewBag.numRequisito
}, FormMethod.Post))
{

    <div class="card">
        @Html.AntiForgeryToken()
        <div class="card-header">
            <div class="form-group row">

                @Html.LabelFor(m => m.IdRequisito, new { @class = "col-form-label", style = "margin-left:15px" })
                <div class="col-sm-3">
                    @Html.TextBoxFor(m => m.IdRequisito, new { @class = "form-control mx-sm-2", placeholder = r.IdRequisito, maxlenght = "6" })

                </div>

                @Html.LabelFor(m => m.Nombre, new { @class = "col-form-label", style = "margin-left:10px;margin-right:5px" })
                @Html.TextBoxFor(m => m.Nombre, new { placeholder = Model.Nombre, @class = "form-control col-sm-6 " })

            </div>
            <div>
                @Html.ValidationMessageFor(m => m.IdRequisito, "", new { @style = "color:rgb(209,52,56); font-size:12px" })
            </div>
            <div>
                @Html.ValidationMessageFor(m => m.Nombre, "", new { @style = "color:rgb(209,52,56); font-size:12px" })
            </div>
        </div>
        <div class="card-body">
            <div>
                @Html.LabelFor(m => m.Descripcion)
                @Html.TextAreaFor(m => m.Descripcion, new { placeholder = "Ingrese la descripción del requisito", @class = "form-control", style = "min-width:100%;margin-bottom:10px", rows = "5" })
                @Html.ValidationMessageFor(m => m.Descripcion, "", new { @style = "color:rgb(209,52,56); font-size:12px" })
            </div>

            <div>
                @Html.LabelFor(m => m.Fuente)
                @Html.TextBoxFor(m => m.Fuente, new { placeholder = "", style = "min-width:100%;margin-bottom:10px", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Fuente, "", new { @style = "color:rgb(209,52,56); font-size:12px" })
            </div>

            <div class="form-group row" style="margin-bottom:10px">
                @Html.LabelFor(m => m.TipoRequisito, new { @class = "col-form-label", style = "margin-left:15px" })
                <div class="col-sm-3">
                    <select id="TipoRequisito" name="TipoRequisito" class="form-control mx-sm-2">
                        <option>Funcional</option>
                        <option>No Funcional</option>
                    </select>
                </div>

                @Html.LabelFor(m => m.Estado, new { @class = "col-form-label", style = "margin-right:30px" })
                <div class="col-sm-3">
                    <select id="Estado" name="Estado" class="form-control mx-sm-2">
                        <option>Pendiente</option>
                        <option>En Proceso</option>
                        <option>En Pruebas</option>
                        <option>Bloqueado</option>
                        <option>Completado</option>
                    </select>
                </div>
            </div>

            <div class="form-group row" style="margin-bottom:10px">
                @Html.LabelFor(m => m.Prioridad, new { @class = "col-form-label", style = "margin-left:15px;margin-right:35px" })
                <div class="col-sm-3">
                    <select id="Prioridad" name="Prioridad" class="form-control mx-sm-2">
                        <option>Crítico</option>
                        <option>Alto</option>
					    <option>Estándar</option>
					    <option>Bajo</option>
					    <option>Deseable</option>
                </select>
                </div>
                @Html.LabelFor(m => m.Estabilidad, new { @class = "col-form-label" })
                <div class="col-sm-3">
                    <select id="Estabilidad" name="Estabilidad" class="form-control mx-sm-2">
                        <option>Transable</option>
                        <option>Intransable</option>
                    </select>
                </div>

            </div>
            <div class="form-group row" style="margin-bottom:10px">
                @Html.LabelFor(m => m.Medida, new { @class = "col-form-label", style = "margin-left:15px;margin-right:45px" })
                <div class="col-sm-3">
                    @Html.TextBoxFor(m => Model.Medida, new { placeholder = "Ingrese la medida", @class = "form-control mx-sm-2" })
                    @Html.ValidationMessageFor(m => m.Medida, "", new { @style = "color:rgb(209,52,56); font-size:12px" })
                </div>
            </div>
            <div>
                @Html.LabelFor(m => m.Escala)
                @Html.TextBoxFor(m => Model.Escala, new { placeholder = "Escala", @class = "form-control col-form-label" })
                @Html.ValidationMessageFor(m => m.Escala, "", new { @style = "color:rgb(209,52,56); font-size:12px" })

            </div>
           
            <div>
                @Html.LabelFor(m => m.Fecha)
                @Html.TextBoxFor(m => m.Fecha, new { placeholder = "Fecha Actualizacion", @class = "form-control col-form-label", disabled = "disabled", @readonly = "readonly", oncopy = "return false", onpaste = "return false" })
                @Html.ValidationMessageFor(m => m.Fecha, "", new { @style = "color:rgb(209,52,56); font-size:12px" })
            </div>
            <div>
                @Html.HiddenFor(m => m.IncrementoCheck.id, new { @class = "form-check-label", style = "margin-right:5px" })
                @Html.LabelFor(m => m.IncrementoCheck)
                @*@Html.TextBoxFor(m => m.Incremento, new { placeholder = "Incremento", @class = "form-control col-form-label" })*@
                @Html.CheckBoxFor(m => m.IncrementoCheck.isChecked, new { style = "margin-left:8px" })
                @*@Html.ValidationMessageFor(m => m.Incremento, "", new { @style = "color:rgb(209,52,56); font-size:14px" })*@
            </div>


            @if (Model.Actores.Count != 0)
            {
                <label>Actores</label>
                <div class="form-group " style="margin-bottom:10px">
                    <div style="padding-left:15px">
                        @for (int i = 0; i < Model.Actores.Count; i++)
                        {
                            <div class="form-group d-inline-block">
                                <div class="form-check-inline col-sm-1">

                                    @Html.HiddenFor(m => m.Actores[i].id)
                                    @Html.CheckBoxFor(m => Model.Actores[i].isChecked, new { style = "margin-right:8px" })
                                    @Html.LabelFor(m => Model.Actores[i].isChecked, Model.Actores[i].nombre, new { @class = "form-check-label", style = "margin-right:5px" })

                                </div>
                            </div>
                        }
                        
                    </div>
                </div>
            }
            @if (tipo.Equals("SISTEMA"))
            {
                <label>Requisitos de Usuario</label>
                if(Model.Requisitos.Count != 0){
                    <div style=" height: 200px; overflow: auto;">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Código</th>
                                    <th>Nombre</th>
                                    <th>Asociado</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0;  i < Model.Requisitos.Count; i++)
                                {
                                    <tr>
                                        <td>@Model.Requisitos[i].nombre</td>
                                        <td>@Model.Requisitos[i].id</td>
                                        <td>
                                            @Html.HiddenFor(m => Model.Requisitos[i].nombre)
                                            @Html.CheckBoxFor(m => Model.Requisitos[i].isChecked, new { style = "margin-right:8px" })

                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            }
        </div>
        <div class="form-group">
            <div style="margin-top:10px;align">
                <button type="submit" class="btn btn-success">Guardar cambios</button>
                @Html.ActionLink("Atras", "ListarRequisitosMinimalista", "Proyecto", new { id = ViewBag.IdProyecto }, new { boton = "valor", @class = "btn btn-dark" })
            </div>
        </div>

    </div>


}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}